<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.1 (Python 3.7.2 on win32)" generated="20190201 12:14:26.273" rpa="false">
<suite id="s1" name="AllCases" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases">
<suite id="s1-s1" name="EndtoEnd" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\EndtoEnd">
<suite id="s1-s1-s1" name="TC 006 E2E" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\EndtoEnd\TC_006_E2E.robot">
<test id="s1-s1-s1-t1" name="TC_006_End_to_End_TestCase">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>E2E</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:26.743" level="INFO">Creating Session using : alias=E2E, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:26.742" endtime="20190201 12:14:26.745"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20190201 12:14:26.750" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20190201 12:14:26.747" endtime="20190201 12:14:26.750"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>first_name=${original_first_name}</arg>
<arg>middle_name=A</arg>
<arg>last_name=World</arg>
<arg>date_of_birth=12/12/1985</arg>
</arguments>
<assign>
<var>&amp;{body}</var>
</assign>
<msg timestamp="20190201 12:14:26.753" level="INFO">&amp;{body} = { first_name=Hello | middle_name=A | last_name=World | date_of_birth=12/12/1985 }</msg>
<status status="PASS" starttime="20190201 12:14:26.751" endtime="20190201 12:14:26.753"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>E2E</arg>
<arg>api/studentsDetails</arg>
<arg>headers=${header}</arg>
<arg>data=${body}</arg>
</arguments>
<assign>
<var>${post_response}</var>
</assign>
<msg timestamp="20190201 12:14:44.783" level="INFO">Post Request using : alias=E2E, uri=api/studentsDetails, data={"first_name": "Hello", "middle_name": "A", "last_name": "World", "date_of_birth": "12/12/1985"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190201 12:14:44.784" level="INFO">${post_response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:26.755" endtime="20190201 12:14:44.784"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${post_response.content}</arg>
</arguments>
<assign>
<var>${json_response}</var>
</assign>
<msg timestamp="20190201 12:14:44.793" level="INFO">To JSON using : content={"id":2338,"first_name":"Hello","middle_name":"A","last_name":"World","date_of_birth":"12/12/1985"} </msg>
<msg timestamp="20190201 12:14:44.793" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190201 12:14:44.794" level="INFO">${json_response} = {'id': 2338, 'first_name': 'Hello', 'middle_name': 'A', 'last_name': 'World', 'date_of_birth': '12/12/1985'}</msg>
<status status="PASS" starttime="20190201 12:14:44.791" endtime="20190201 12:14:44.794"></status>
</kw>
<kw name="get value from json">
<arguments>
<arg>${json_response}</arg>
<arg>id</arg>
</arguments>
<assign>
<var>@{id_list}=</var>
</assign>
<msg timestamp="20190201 12:14:44.823" level="FAIL">No keyword with name 'get value from json' found.</msg>
<status status="FAIL" starttime="20190201 12:14:44.823" endtime="20190201 12:14:44.824"></status>
</kw>
<status status="FAIL" starttime="20190201 12:14:26.739" endtime="20190201 12:14:44.834" critical="yes">No keyword with name 'get value from json' found.</status>
</test>
<status status="FAIL" starttime="20190201 12:14:26.392" endtime="20190201 12:14:44.844"></status>
</suite>
<suite id="s1-s1-s2" name="TC 007 ValidateStatusCode Keyword" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\EndtoEnd\TC_007_ValidateStatusCode_Keyword.robot">
<test id="s1-s1-s2-t1" name="TC_001_Fetch_Student_details_by_id">
<kw name="Fetch and Validate Get Status Code" library="UserKeyword">
<doc>This keyword is for validating status code of given student</doc>
<arguments>
<arg>50</arg>
<arg>200</arg>
</arguments>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:44.984" level="INFO">Creating Session using : alias=SName, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:44.980" endtime="20190201 12:14:44.986"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>api/studentsDetails/${studentId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:45.947" level="INFO">Get Request using : alias=SName, uri=api/studentsDetails/50, headers=None json=None</msg>
<msg timestamp="20190201 12:14:45.948" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:44.988" endtime="20190201 12:14:45.948"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statusC}</var>
</assign>
<msg timestamp="20190201 12:14:45.952" level="INFO">${statusC} = 200</msg>
<status status="PASS" starttime="20190201 12:14:45.949" endtime="20190201 12:14:45.952"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${expetcedStausCode}</arg>
<arg>${statusC}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:45.953" endtime="20190201 12:14:45.956"></status>
</kw>
<status status="PASS" starttime="20190201 12:14:44.978" endtime="20190201 12:14:45.956"></status>
</kw>
<kw name="Fetch and Return Get Response" library="UserKeyword">
<arguments>
<arg>50</arg>
</arguments>
<assign>
<var>${respnse}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:45.962" level="INFO">Creating Session using : alias=SName, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:45.961" endtime="20190201 12:14:45.963"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>api/studentsDetails/${studentId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:46.078" level="INFO">Get Request using : alias=SName, uri=api/studentsDetails/50, headers=None json=None</msg>
<msg timestamp="20190201 12:14:46.079" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:45.964" endtime="20190201 12:14:46.079"></status>
</kw>
<msg timestamp="20190201 12:14:46.080" level="INFO">${respnse} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:45.958" endtime="20190201 12:14:46.081"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${respnse.content}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:46.083" endtime="20190201 12:14:46.092"></status>
</kw>
<kw name="Fetch and Return Get Response" library="UserKeyword">
<arguments>
<arg>51</arg>
</arguments>
<assign>
<var>${respnse1}</var>
</assign>
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>SName</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:46.097" level="INFO">Creating Session using : alias=SName, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:46.095" endtime="20190201 12:14:46.098"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>SName</arg>
<arg>api/studentsDetails/${studentId}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:46.227" level="INFO">Get Request using : alias=SName, uri=api/studentsDetails/51, headers=None json=None</msg>
<msg timestamp="20190201 12:14:46.228" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:46.099" endtime="20190201 12:14:46.228"></status>
</kw>
<msg timestamp="20190201 12:14:46.229" level="INFO">${respnse1} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:46.093" endtime="20190201 12:14:46.230"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${respnse1.content}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:46.238" endtime="20190201 12:14:46.242"></status>
</kw>
<status status="PASS" starttime="20190201 12:14:44.970" endtime="20190201 12:14:46.244" critical="yes"></status>
</test>
<status status="PASS" starttime="20190201 12:14:44.865" endtime="20190201 12:14:46.250"></status>
</suite>
<suite id="s1-s1-s3" name="TC 008 Post ReadJson" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\EndtoEnd\TC_008_Post_ReadJson.robot">
<test id="s1-s1-s3-t1" name="TC_004 create new resource">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>AddData</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:46.341" level="INFO">Creating Session using : alias=AddData, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:46.339" endtime="20190201 12:14:46.343"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20190201 12:14:46.352" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20190201 12:14:46.350" endtime="20190201 12:14:46.352"></status>
</kw>
<kw name="Fetch Request Content" library="UserKeyword">
<assign>
<var>${jsonContent}</var>
</assign>
<kw name="Read Request Content" library="ReadJsonContent">
<assign>
<var>${jsonbody}</var>
</assign>
<msg timestamp="20190201 12:14:46.364" level="INFO">${jsonbody} = {'first_name': 'A1', 'middle_name': 'B1', 'last_name': 'C1', 'date_of_birth': '12/12/1999'}</msg>
<status status="PASS" starttime="20190201 12:14:46.362" endtime="20190201 12:14:46.365"></status>
</kw>
<msg timestamp="20190201 12:14:46.366" level="INFO">${jsonContent} = {'first_name': 'A1', 'middle_name': 'B1', 'last_name': 'C1', 'date_of_birth': '12/12/1999'}</msg>
<status status="PASS" starttime="20190201 12:14:46.359" endtime="20190201 12:14:46.366"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>AddData</arg>
<arg>/api/studentsDetails</arg>
<arg>data=${jsonContent}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:46.531" level="INFO">Post Request using : alias=AddData, uri=/api/studentsDetails, data={"first_name": "A1", "middle_name": "B1", "last_name": "C1", "date_of_birth": "12/12/1999"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190201 12:14:46.532" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:46.376" endtime="20190201 12:14:46.532"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:46.534" endtime="20190201 12:14:46.541"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${code}</var>
</assign>
<msg timestamp="20190201 12:14:46.544" level="INFO">${code} = 201</msg>
<status status="PASS" starttime="20190201 12:14:46.542" endtime="20190201 12:14:46.545"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code}</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:46.552" endtime="20190201 12:14:46.554"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:46.562" endtime="20190201 12:14:46.567"></status>
</kw>
<status status="PASS" starttime="20190201 12:14:46.335" endtime="20190201 12:14:46.569" critical="yes"></status>
</test>
<status status="PASS" starttime="20190201 12:14:46.260" endtime="20190201 12:14:46.576"></status>
</suite>
<status status="FAIL" starttime="20190201 12:14:26.385" endtime="20190201 12:14:46.589"></status>
</suite>
<suite id="s1-s2" name="Get Delete" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Get_Delete">
<suite id="s1-s2-s1" name="TC 001 Get Request" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Get_Delete\TC_001_Get_Request.robot">
<kw name="Welcome User" library="UserKeyword" type="setup">
<doc>Executing New Test Case</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>This is Starting of TestCase</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:46.713" endtime="20190201 12:14:46.715"></status>
</kw>
<status status="PASS" starttime="20190201 12:14:46.712" endtime="20190201 12:14:46.716"></status>
</kw>
<test id="s1-s2-s1-t1" name="TC_001_Fetch_Student_details_by_id">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>FetchData</arg>
<arg>${App_Base_URL}</arg>
</arguments>
<msg timestamp="20190201 12:14:46.724" level="INFO">Creating Session using : alias=FetchData, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:46.721" endtime="20190201 12:14:46.727"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>FetchData</arg>
<arg>api/studentsDetails/${StudentID}</arg>
</arguments>
<assign>
<var>${Response}</var>
</assign>
<msg timestamp="20190201 12:14:46.906" level="INFO">Get Request using : alias=FetchData, uri=api/studentsDetails/61, headers=None json=None</msg>
<msg timestamp="20190201 12:14:46.907" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:46.729" endtime="20190201 12:14:46.907"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Response.status_code}</arg>
</arguments>
<assign>
<var>${actual_code}</var>
</assign>
<msg timestamp="20190201 12:14:46.911" level="INFO">${actual_code} = 200</msg>
<status status="PASS" starttime="20190201 12:14:46.909" endtime="20190201 12:14:46.911"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${actual_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:46.913" endtime="20190201 12:14:46.916"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${Response.content}</arg>
</arguments>
<assign>
<var>${json_res}</var>
</assign>
<msg timestamp="20190201 12:14:46.920" level="INFO">To JSON using : content={"status":"false","msg":"No data Found"} </msg>
<msg timestamp="20190201 12:14:46.921" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190201 12:14:46.921" level="INFO">${json_res} = {'status': 'false', 'msg': 'No data Found'}</msg>
<status status="PASS" starttime="20190201 12:14:46.918" endtime="20190201 12:14:46.922"></status>
</kw>
<kw name="get value from json">
<arguments>
<arg>${json_res}</arg>
<arg>data.first_name</arg>
</arguments>
<assign>
<var>@{first_name_list}=</var>
</assign>
<msg timestamp="20190201 12:14:46.945" level="FAIL">No keyword with name 'get value from json' found.</msg>
<status status="FAIL" starttime="20190201 12:14:46.944" endtime="20190201 12:14:46.945"></status>
</kw>
<tags>
<tag>Sanity</tag>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20190201 12:14:46.716" endtime="20190201 12:14:46.947" critical="yes">No keyword with name 'get value from json' found.</status>
</test>
<test id="s1-s2-s1-t2" name="TC_002_Fetch_Student_details_by_Name">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>FetchData</arg>
<arg>${App_Base_URL}</arg>
</arguments>
<msg timestamp="20190201 12:14:46.958" level="INFO">Creating Session using : alias=FetchData, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:46.956" endtime="20190201 12:14:46.959"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>FetchData</arg>
<arg>api/studentsDetails/${StudentID}</arg>
</arguments>
<assign>
<var>${Response}</var>
</assign>
<msg timestamp="20190201 12:14:47.098" level="INFO">Get Request using : alias=FetchData, uri=api/studentsDetails/61, headers=None json=None</msg>
<msg timestamp="20190201 12:14:47.099" level="INFO">${Response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:46.961" endtime="20190201 12:14:47.100"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${Response.status_code}</arg>
</arguments>
<assign>
<var>${actual_code}</var>
</assign>
<msg timestamp="20190201 12:14:47.105" level="INFO">${actual_code} = 200</msg>
<status status="PASS" starttime="20190201 12:14:47.101" endtime="20190201 12:14:47.105"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${actual_code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:47.107" endtime="20190201 12:14:47.109"></status>
</kw>
<tags>
<tag>Hello</tag>
</tags>
<status status="PASS" starttime="20190201 12:14:46.952" endtime="20190201 12:14:47.110" critical="yes"></status>
</test>
<kw name="End TestCase" library="UserKeyword" type="teardown">
<doc>TestCase Completed</doc>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>This is End of TestCase</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:47.118" endtime="20190201 12:14:47.119"></status>
</kw>
<status status="PASS" starttime="20190201 12:14:47.117" endtime="20190201 12:14:47.120"></status>
</kw>
<doc>This Suite is for Making GET Request and fetch student details</doc>
<status status="FAIL" starttime="20190201 12:14:46.632" endtime="20190201 12:14:47.121"></status>
</suite>
<suite id="s1-s2-s2" name="TC 002 Get With Param" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Get_Delete\TC_002_Get_With_Param.robot">
<test id="s1-s2-s2-t1" name="TC_002 Validate Get Request with Parameters">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>Get_Param</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:47.184" level="INFO">Creating Session using : alias=Get_Param, url=https://reqres.in, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:47.182" endtime="20190201 12:14:47.187"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>page=2</arg>
</arguments>
<assign>
<var>&amp;{param}</var>
</assign>
<msg timestamp="20190201 12:14:47.190" level="INFO">&amp;{param} = { page=2 }</msg>
<status status="PASS" starttime="20190201 12:14:47.188" endtime="20190201 12:14:47.190"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>Get_Param</arg>
<arg>/api/users</arg>
<arg>params=${param}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:47.836" level="INFO">Get Request using : alias=Get_Param, uri=/api/users, headers=None json=None</msg>
<msg timestamp="20190201 12:14:47.837" level="INFO">c:\python37\lib\site-packages\urllib3\connectionpool.py:847: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings
  InsecureRequestWarning)</msg>
<msg timestamp="20190201 12:14:47.840" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:47.191" endtime="20190201 12:14:47.841"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${statuscode}</var>
</assign>
<msg timestamp="20190201 12:14:47.845" level="INFO">${statuscode} = 200</msg>
<status status="PASS" starttime="20190201 12:14:47.842" endtime="20190201 12:14:47.845"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${statuscode}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:47.847" endtime="20190201 12:14:47.849"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${jsonresponse}</var>
</assign>
<msg timestamp="20190201 12:14:47.853" level="INFO">To JSON using : content={"page":2,"per_page":3,"total":12,"total_pages":4,"data":[{"id":4,"first_name":"Eve","last_name":"Holt","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg"},{"id":5,"first_name":"Charles","last_name":"Morris","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/stephenmoon/128.jpg"},{"id":6,"first_name":"Tracey","last_name":"Ramos","avatar":"https://s3.amazonaws.com/uifaces/faces/twitter/bigmancho/128.jpg"}]} </msg>
<msg timestamp="20190201 12:14:47.853" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190201 12:14:47.854" level="INFO">${jsonresponse} = {'page': 2, 'per_page': 3, 'total': 12, 'total_pages': 4, 'data': [{'id': 4, 'first_name': 'Eve', 'last_name': 'Holt', 'avatar': 'https://s3.amazonaws.com/uifaces/faces/twitter/marcoramires/128.jpg'},...</msg>
<status status="PASS" starttime="20190201 12:14:47.850" endtime="20190201 12:14:47.854"></status>
</kw>
<kw name="get value from json">
<arguments>
<arg>${jsonresponse}</arg>
<arg>data[0].first_name</arg>
</arguments>
<assign>
<var>@{name_list}=</var>
</assign>
<msg timestamp="20190201 12:14:47.872" level="FAIL">No keyword with name 'get value from json' found.</msg>
<status status="FAIL" starttime="20190201 12:14:47.871" endtime="20190201 12:14:47.872"></status>
</kw>
<tags>
<tag>Regression</tag>
<tag>Smoke</tag>
</tags>
<status status="FAIL" starttime="20190201 12:14:47.178" endtime="20190201 12:14:47.880" critical="yes">No keyword with name 'get value from json' found.</status>
</test>
<status status="FAIL" starttime="20190201 12:14:47.132" endtime="20190201 12:14:47.888"></status>
</suite>
<suite id="s1-s2-s3" name="TC 003 DeleteRequest" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Get_Delete\TC_003_DeleteRequest.robot">
<test id="s1-s2-s3-t1" name="TC_003 Validate Delete Request">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>AppAccess</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:47.941" level="INFO">Creating Session using : alias=AppAccess, url=http://thetestingworldapi.com, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:47.939" endtime="20190201 12:14:47.944"></status>
</kw>
<kw name="Delete Request" library="RequestsLibrary">
<doc>Send a DELETE request on the session object found using the
given `alias`</doc>
<arguments>
<arg>AppAccess</arg>
<arg>/api/studentsDetails/77</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:48.085" level="INFO">Delete Request using : alias=AppAccess, uri=/api/studentsDetails/77, data=None,                     headers=None, allow_redirects=True </msg>
<msg timestamp="20190201 12:14:48.086" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:47.948" endtime="20190201 12:14:48.087"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${code}</var>
</assign>
<msg timestamp="20190201 12:14:48.091" level="INFO">${code} = 200</msg>
<status status="PASS" starttime="20190201 12:14:48.088" endtime="20190201 12:14:48.091"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:48.092" endtime="20190201 12:14:48.094"></status>
</kw>
<kw name="To Json" library="RequestsLibrary">
<doc>Convert a string to a JSON object</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${jsonresponse}</var>
</assign>
<msg timestamp="20190201 12:14:48.098" level="INFO">To JSON using : content={"status":"false","msg":"record not found"} </msg>
<msg timestamp="20190201 12:14:48.098" level="INFO">To JSON using : pretty_print=False </msg>
<msg timestamp="20190201 12:14:48.099" level="INFO">${jsonresponse} = {'status': 'false', 'msg': 'record not found'}</msg>
<status status="PASS" starttime="20190201 12:14:48.096" endtime="20190201 12:14:48.099"></status>
</kw>
<kw name="get value from json">
<arguments>
<arg>${jsonresponse}</arg>
<arg>status</arg>
</arguments>
<assign>
<var>@{status_list}=</var>
</assign>
<msg timestamp="20190201 12:14:48.128" level="FAIL">No keyword with name 'get value from json' found.</msg>
<status status="FAIL" starttime="20190201 12:14:48.128" endtime="20190201 12:14:48.129"></status>
</kw>
<tags>
<tag>Regression</tag>
</tags>
<status status="FAIL" starttime="20190201 12:14:47.933" endtime="20190201 12:14:48.131" critical="yes">No keyword with name 'get value from json' found.</status>
</test>
<status status="FAIL" starttime="20190201 12:14:47.899" endtime="20190201 12:14:48.137"></status>
</suite>
<status status="FAIL" starttime="20190201 12:14:46.612" endtime="20190201 12:14:48.159"></status>
</suite>
<suite id="s1-s3" name="Put Post" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Put_Post">
<suite id="s1-s3-s1" name="TC 004 PostRequest" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Put_Post\TC_004_PostRequest.robot">
<test id="s1-s3-s1-t1" name="TC_004 create new resource">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>AddData</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:48.234" level="INFO">Creating Session using : alias=AddData, url=http://thetestingworldapi.com/, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:48.233" endtime="20190201 12:14:48.236"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>first_name=Testing</arg>
<arg>middle_name=A</arg>
<arg>last_name=World</arg>
<arg>date_of_birth=12/12/1990</arg>
</arguments>
<assign>
<var>&amp;{body}</var>
</assign>
<msg timestamp="20190201 12:14:48.240" level="INFO">&amp;{body} = { first_name=Testing | middle_name=A | last_name=World | date_of_birth=12/12/1990 }</msg>
<status status="PASS" starttime="20190201 12:14:48.238" endtime="20190201 12:14:48.241"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20190201 12:14:48.245" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20190201 12:14:48.242" endtime="20190201 12:14:48.245"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>AddData</arg>
<arg>/api/studentsDetails</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:48.380" level="INFO">Post Request using : alias=AddData, uri=/api/studentsDetails, data={"first_name": "Testing", "middle_name": "A", "last_name": "World", "date_of_birth": "12/12/1990"}, headers={'Content-Type': 'application/json'}, files=None, allow_redirects=True </msg>
<msg timestamp="20190201 12:14:48.381" level="INFO">${response} = &lt;Response [201]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:48.246" endtime="20190201 12:14:48.381"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:48.383" endtime="20190201 12:14:48.386"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<assign>
<var>${code}</var>
</assign>
<msg timestamp="20190201 12:14:48.391" level="INFO">${code} = 201</msg>
<status status="PASS" starttime="20190201 12:14:48.389" endtime="20190201 12:14:48.392"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code}</arg>
<arg>201</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:48.393" endtime="20190201 12:14:48.395"></status>
</kw>
<status status="PASS" starttime="20190201 12:14:48.224" endtime="20190201 12:14:48.397" critical="yes"></status>
</test>
<status status="PASS" starttime="20190201 12:14:48.190" endtime="20190201 12:14:48.401"></status>
</suite>
<suite id="s1-s3-s2" name="TC 005 PutRequst" source="C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Put_Post\TC_005_PutRequst.robot">
<test id="s1-s3-s2-t1" name="TC_004 create new resource">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>AddData</arg>
<arg>${base_url}</arg>
</arguments>
<msg timestamp="20190201 12:14:48.449" level="INFO">Creating Session using : alias=AddData, url=http://thetestingworldapi.com, headers={},                     cookies=None, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20190201 12:14:48.448" endtime="20190201 12:14:48.450"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=1818</arg>
<arg>first_name=Testing</arg>
<arg>middle_name=ABCD1234</arg>
<arg>last_name=World</arg>
<arg>date_of_birth=12/12/1990</arg>
</arguments>
<assign>
<var>&amp;{body}</var>
</assign>
<msg timestamp="20190201 12:14:48.455" level="INFO">&amp;{body} = { id=1818 | first_name=Testing | middle_name=ABCD1234 | last_name=World | date_of_birth=12/12/1990 }</msg>
<status status="PASS" starttime="20190201 12:14:48.452" endtime="20190201 12:14:48.455"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>Content-Type=application/json</arg>
</arguments>
<assign>
<var>&amp;{header}</var>
</assign>
<msg timestamp="20190201 12:14:48.458" level="INFO">&amp;{header} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20190201 12:14:48.457" endtime="20190201 12:14:48.459"></status>
</kw>
<kw name="Put Request" library="RequestsLibrary">
<doc>Send a PUT request on the session object found using the
given `alias`</doc>
<arguments>
<arg>AddData</arg>
<arg>/api/studentsDetails/1818</arg>
<arg>data=${body}</arg>
<arg>headers=${header}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20190201 12:14:48.669" level="INFO">Put Request using : alias=AddData, uri=/api/studentsDetails/1818, data={"id": "1818", "first_name": "Testing", "middle_name": "ABCD1234", "last_name": "World", "date_of_birth": "12/12/1990"},                     headers={'Content-Type': 'application/json'}, allow_redirects=True </msg>
<msg timestamp="20190201 12:14:48.670" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:48.460" endtime="20190201 12:14:48.670"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:48.671" endtime="20190201 12:14:48.674"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:48.676" endtime="20190201 12:14:48.679"></status>
</kw>
<kw name="Get Request" library="RequestsLibrary">
<doc>Send a GET request on the session object found using the
given `alias`</doc>
<arguments>
<arg>AddData</arg>
<arg>/api/studentsDetails/1818</arg>
</arguments>
<assign>
<var>${response1}</var>
</assign>
<msg timestamp="20190201 12:14:48.743" level="INFO">Get Request using : alias=AddData, uri=/api/studentsDetails/1818, headers=None json=None</msg>
<msg timestamp="20190201 12:14:48.744" level="INFO">${response1} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20190201 12:14:48.681" endtime="20190201 12:14:48.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response1.content}</arg>
</arguments>
<status status="PASS" starttime="20190201 12:14:48.746" endtime="20190201 12:14:48.749"></status>
</kw>
<status status="PASS" starttime="20190201 12:14:48.444" endtime="20190201 12:14:48.751" critical="yes"></status>
</test>
<status status="PASS" starttime="20190201 12:14:48.409" endtime="20190201 12:14:48.756"></status>
</suite>
<status status="PASS" starttime="20190201 12:14:48.176" endtime="20190201 12:14:48.766"></status>
</suite>
<status status="FAIL" starttime="20190201 12:14:26.280" endtime="20190201 12:14:48.782"></status>
</suite>
<statistics>
<total>
<stat pass="5" fail="4">Critical Tests</stat>
<stat pass="5" fail="4">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">Hello</stat>
<stat pass="0" fail="2">Regression</stat>
<stat pass="0" fail="1">Sanity</stat>
<stat pass="0" fail="2">Smoke</stat>
</tag>
<suite>
<stat pass="5" fail="4" id="s1" name="AllCases">AllCases</stat>
<stat pass="2" fail="1" id="s1-s1" name="EndtoEnd">AllCases.EndtoEnd</stat>
<stat pass="0" fail="1" id="s1-s1-s1" name="TC 006 E2E">AllCases.EndtoEnd.TC 006 E2E</stat>
<stat pass="1" fail="0" id="s1-s1-s2" name="TC 007 ValidateStatusCode Keyword">AllCases.EndtoEnd.TC 007 ValidateStatusCode Keyword</stat>
<stat pass="1" fail="0" id="s1-s1-s3" name="TC 008 Post ReadJson">AllCases.EndtoEnd.TC 008 Post ReadJson</stat>
<stat pass="1" fail="3" id="s1-s2" name="Get Delete">AllCases.Get Delete</stat>
<stat pass="1" fail="1" id="s1-s2-s1" name="TC 001 Get Request">AllCases.Get Delete.TC 001 Get Request</stat>
<stat pass="0" fail="1" id="s1-s2-s2" name="TC 002 Get With Param">AllCases.Get Delete.TC 002 Get With Param</stat>
<stat pass="0" fail="1" id="s1-s2-s3" name="TC 003 DeleteRequest">AllCases.Get Delete.TC 003 DeleteRequest</stat>
<stat pass="2" fail="0" id="s1-s3" name="Put Post">AllCases.Put Post</stat>
<stat pass="1" fail="0" id="s1-s3-s1" name="TC 004 PostRequest">AllCases.Put Post.TC 004 PostRequest</stat>
<stat pass="1" fail="0" id="s1-s3-s2" name="TC 005 PutRequst">AllCases.Put Post.TC 005 PutRequst</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20190201 12:14:26.701" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\EndtoEnd\TC_006_E2E.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:44.886" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\EndtoEnd\TC_007_ValidateStatusCode_Keyword.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:44.917" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\Resources\UserKeyword.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:46.294" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\EndtoEnd\TC_008_Post_ReadJson.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:46.321" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\Resources\UserKeyword.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:46.658" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Get_Delete\TC_001_Get_Request.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:46.691" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\Resources\UserKeyword.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:47.165" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Get_Delete\TC_002_Get_With_Param.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:47.922" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Get_Delete\TC_003_DeleteRequest.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:48.213" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Put_Post\TC_004_PostRequest.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
<msg timestamp="20190201 12:14:48.434" level="ERROR">Error in file 'C:\Users\TestingWorld\PycharmProjects\RobotAPIAutomation\AllCases\Put_Post\TC_005_PutRequst.robot': Importing test library 'JSONLibrary' failed: ModuleNotFoundError: No module named 'JSONLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Python37\Scripts\robot.exe
  c:\python37\python37.zip
  c:\python37\DLLs
  c:\python37\lib
  c:\python37
  c:\python37\lib\site-packages</msg>
</errors>
</robot>
